{"version":3,"sources":["../src/index.js"],"names":["NAMESPACE","START","STOP","createReduxSagaLoading","opts","namespace","initialState","models","reduxReducers","state","action","model","type","startLoading","stopLoading","data","users","log"],"mappings":";;;;;;;;;;;AAAA;;;;;;AACA,IAAMA,YAAY,SAAlB;AACA,IAAMC,QAAQ,4BAAd;AACA,IAAMC,OAAO,2BAAb;;AAEA,SAASC,sBAAT,GAA2C;AAAA,QAAXC,IAAW,uEAAJ,EAAI;;AACvC,QAAMC,YAAYD,KAAKC,SAAL,IAAkBL,SAApC;AACA,QAAMM,eAAe;AACjBC,gBAAQ;AADS,KAArB;AAGA,QAAMC,oCACDH,SADC,cACwC;AAAA,YAA9BI,KAA8B,uEAAtBH,YAAsB;AAAA,YAARI,MAAQ;AAAA,YAElCC,KAFkC,GAGlCD,MAHkC,CAElCC,KAFkC;;AAItC,gBAAQD,OAAOE,IAAf;AACI,iBAAKX,KAAL;AACI,uBAAO;AACHM,yCACOE,MAAMF,MADb,sBAEKI,KAFL,EAEa,IAFb;AADG,iBAAP;AAMJ,iBAAKT,IAAL;AACI,uBAAO;AACHK,yCACOE,MAAMF,MADb,sBAEKI,KAFL,EAEa,KAFb;AADG,iBAAP;AAMJ;AACI,uBAAOF,KAAP;AAhBR;AAkBH,KAvBC,CAAN;AAyBA,WAAO;AACHD;AADG,KAAP;AAGH;;AAED,IAAMK,eAAe,SAAfA,YAAe,CAACF,KAAD;AAAA,WAAW,kBAAI;AAChCC,cAAMX,KAD0B;AAEhCU;AAFgC,KAAJ,CAAX;AAAA,CAArB;AAIA,IAAMG,cAAc,SAAdA,WAAc,CAACH,KAAD;AAAA,WAAW,kBAAI;AAC/BC,cAAMV,IADyB;AAE/BS;AAF+B,KAAJ,CAAX;AAAA,CAApB;;QAMIR,sB,GAAAA,sB;QACAU,Y,GAAAA,Y;QACAC,W,GAAAA,W;;;AAGJ,IAAMC,OAAO,EAAER,QAAQ,EAAES,OAAO,IAAT,EAAV,EAAb;AACA,qBAAQC,GAAR,oCAAeF,KAAKR,MAApB","file":"index.js","sourcesContent":["import { put } from \"redux-saga/effects\"\r\nconst NAMESPACE = 'loading';\r\nconst START = '@@REDUX_SAGA_LOADING/START'\r\nconst STOP = '@@REDUX_SAGA_LOADING/STOP'\r\n\r\nfunction createReduxSagaLoading(opts = {}) {\r\n    const namespace = opts.namespace || NAMESPACE;\r\n    const initialState = {\r\n        models: {}\r\n    };\r\n    const reduxReducers = {\r\n        [namespace](state = initialState, action) {\r\n            const {\r\n                model\r\n            } = action\r\n            switch (action.type) {\r\n                case START:\r\n                    return {\r\n                        models: {\r\n                            ...state.models,\r\n                            [model]: true\r\n                        }\r\n                    };\r\n                case STOP:\r\n                    return {\r\n                        models: {\r\n                            ...state.models,\r\n                            [model]: false\r\n                        }\r\n                    };\r\n                default:\r\n                    return state;\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        reduxReducers\r\n    };\r\n}\r\n\r\nconst startLoading = (model) => put({\r\n    type: START,\r\n    model\r\n})\r\nconst stopLoading = (model) => put({\r\n    type: STOP,\r\n    model\r\n})\r\n\r\nexport {\r\n    createReduxSagaLoading,\r\n    startLoading,\r\n    stopLoading\r\n}\r\n\r\nconst data = { models: { users: true }}\r\nconsole.log(...data.models)"]}